#!/usr/bin/env bash
# shellcheck disable=SC1091

set -euo pipefail

# Constants
PROFILE_PATH="$HOME/.config/home-manager/home.nix"
ORIGIN="github.com/danbergelt/dotfiles.git"
REPO_LOCATION="$HOME/dotfiles"

# Colors
RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[1;34m"
NC="\033[0m"

# Inputs
FORCE=
TOKEN=

show_usage() {
  cat <<-EOF

  Usage: setup.sh [options]

  Options:

    -h, --help           Display usage information
    -f, --force          Skip user confirmations
    -t, --token [token]  GitHub API token
 
EOF
}

abort() {
  >&2 echo -e "${RED}[ERROR]${NC} $1" && exit 1
}

info() {
  echo -e "\n${BLUE}[INFO]${NC} $1"
}

ask() {
  read -rp "$1 (y/n) " choice
  case "$choice" in
    y|Y) return ;;
    n|N) exit 0 ;;
    *) ask "$1" ;;
  esac
}

# These commands must exist
for cmd in git curl; do
  if ! command -v "$cmd" &> /dev/null; then
    abort "$cmd missing in PATH"
  fi
done

# Parse input
while test $# -ne 0; do
  case "$1" in
    -h|--help) show_usage && exit ;;
    -f|--force) FORCE="true" ;; 
    -t|--token) shift; TOKEN="$1" ;;
    *) show_usage && abort "Unrecognized argument: $1" ;;
  esac
  shift
done

if test -z "$FORCE"; then
  ask "Bootstrap dotfiles?"
fi

info "Cloning dotfiles repo"
if test -d "$REPO_LOCATION"; then
  echo "$REPO_LOCATION already exists"
else
  # A token is required to push changes upstream
  if test -z "$TOKEN"; then
    show_usage && abort "Missing GitHub API token"
  fi

  rm -rf "$REPO_LOCATION"
  git clone "https://$ORIGIN" "$REPO_LOCATION"
  pushd "$REPO_LOCATION" > /dev/null
  git remote remove origin
  git remote add origin "https://$TOKEN@$ORIGIN"
  git config user.name "danbergelt"
  git config user.email "dan@danbergelt.com"
  popd > /dev/null
fi

info "Installing nix and home-manager"
sh <(curl -L https://nixos.org/nix/install) --no-daemon
source "$HOME/.nix-profile/etc/profile.d/nix.sh"
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
nix-channel --update
nix-shell '<home-manager>' -A install

info "Exposing dotfiles to nix"
imports="imports = [$REPO_LOCATION];"
if grep -q -F "$imports" "$PROFILE_PATH"; then
  echo "$PROFILE_PATH already imports dotfiles"
else
  echo "Writing to $PROFILE_PATH"
  anchor="programs.home-manager.enable = true;"
  header="# GENERATED BY DOTFILES SETUP SCRIPT"
  sed -i "s:$anchor:$anchor\n\n  $header\n  $imports:" "$PROFILE_PATH"
fi

echo -e "\n${GREEN}All done, please reload your shell${NC}"
